/***************************************************************************************************************************
 * This portion of the code originates from the Beremiz project, which is licensed under the GNU General Public License 
 * Version 2 (GPLv2). It has been temporarily incorporated into our current project, which is under the Apache License 
 * Version 2.0. We are aware of the licensing incompatibility between GPLv2 and Apache License Version 2.0 and are 
 * actively working on developing a more suitable solution tailored to our specific needs. This integration is 
 * provisional, and our goal is to replace this temporary implementation with our own, fully compliant version as soon 
 * as possible. We acknowledge the contribution of the MatIEC project and intend to ensure all uses are in line with 
 * its licensing terms during this transitional period. All users of this code are advised to consider the licensing 
 * implications of the GPLv3 and Apache License Version 2.0.
 ****************************************************************************************************************************/

/*
 * Generated by erpcgen 1.12.0 on Fri Mar 22 05:00:10 2024.
 *
 * AUTOGENERATED - DO NOT EDIT
 */


#if !defined(_erpc_PLCObject_interface_hpp_)
#define _erpc_PLCObject_interface_hpp_

#include "erpc_PLCObject_common.hpp"

namespace erpcShim
{


// Abstract base class for BeremizPLCObjectService
class BeremizPLCObjectService_interface
{
    public:
        static const uint8_t m_serviceId = 1;
        static const uint8_t m_AppendChunkToBlobId = 1;
        static const uint8_t m_GetLogMessageId = 2;
        static const uint8_t m_GetPLCIDId = 3;
        static const uint8_t m_GetPLCstatusId = 4;
        static const uint8_t m_GetTraceVariablesId = 5;
        static const uint8_t m_MatchMD5Id = 6;
        static const uint8_t m_NewPLCId = 7;
        static const uint8_t m_PurgeBlobsId = 8;
        static const uint8_t m_RepairPLCId = 9;
        static const uint8_t m_ResetLogCountId = 10;
        static const uint8_t m_SeedBlobId = 11;
        static const uint8_t m_SetTraceVariablesListId = 12;
        static const uint8_t m_StartPLCId = 13;
        static const uint8_t m_StopPLCId = 14;

        virtual ~BeremizPLCObjectService_interface(void);

        virtual uint32_t AppendChunkToBlob(const binary_t * data, const binary_t * blobID, binary_t * newBlobID) = 0;

        virtual uint32_t GetLogMessage(uint8_t level, uint32_t msgID, log_message * message) = 0;

        virtual uint32_t GetPLCID(PSKID * plcID) = 0;

        virtual uint32_t GetPLCstatus(PLCstatus * status) = 0;

        virtual uint32_t GetTraceVariables(uint32_t debugToken, TraceVariables * traces) = 0;

        virtual uint32_t MatchMD5(const char * MD5, bool * match) = 0;

        virtual uint32_t NewPLC(const char * md5sum, const binary_t * plcObjectBlobID, const list_extra_file_1_t * extrafiles, bool * success) = 0;

        virtual uint32_t PurgeBlobs(void) = 0;

        virtual uint32_t RepairPLC(void) = 0;

        virtual uint32_t ResetLogCount(void) = 0;

        virtual uint32_t SeedBlob(const binary_t * seed, binary_t * blobID) = 0;

        virtual uint32_t SetTraceVariablesList(const list_trace_order_1_t * orders, uint32_t * debugtoken) = 0;

        virtual uint32_t StartPLC(void) = 0;

        virtual uint32_t StopPLC(bool * success) = 0;
private:
};
} // erpcShim


#endif // _erpc_PLCObject_interface_hpp_
